.location > p {
	height: 50px;
	width: 100%;
	background: map-get($greys, light);
	box-shadow: inset 0 3px 5px -6px black;
	// text-align: center;
	color: map-get($greys, darker);
	@include centerblock;
	// display: flex;
	// align-items: center;
	// justify-content: center;
	font-size: 16px;
	font-weight: 500;
	position: relative;
	& i {
		display: block;
		position: absolute;
		left: 28%;
	}
	// 	&::before { font-family: "Font Awesome 5 Free";
	// 		font-weight: 900;
	// 		content: "\f3c5"; display:block;
	// 	position: absolute; left:28%;
	// }
}
.location {
	width: 100%;
	height: 337px;
	background: map-get($greys, lighter);
}
.location div {
	width: 100%;
	padding: 38px 0;
	text-align: center;
	display: flex;
	flex-direction: column;
	align-items: center;
	& h1 {
		width: 75%;
		margin-bottom: 11px;
		position: relative;
		left: -8px;
	}
	& p {
		font-size: 18px;
		font-weight: 300;
		color: map-get($greys, darker);
		position: relative;
		left: 4px;
	}
	& a {cursor: default;}
	& button {
		position: relative;
		left: 4px;
	}
	// 	height: 287px;

	// 	justify-content: space-around;
}
.fonct {
	padding: 48px 20px 47px 20px;
	& ol {
		width: 100%;
		list-style: none;
		counter-reset: li;
		margin-top: 25px;
		padding-left: 10px;
		& li {
			counter-increment: li;
			width: 100%;
			height: 75px;
			background: map-get($greys, lighter);
			margin: 0 0 22px 0px;
			font-size: 16px;
			font-weight: 500;
			border-radius: 20px;
			@include centerblock2;
			box-shadow: 2px 5px 12px map-get($greys, medium);

			&::before {
				content: counter(li);
				color: white;
				background: $col-prim;
				border-radius: 50%;
				font-size: 14px;
				font-weight: 400;
				width: 25px;
				height: 25px;
				margin: 0 0 0 -10px;
				padding: 2px 0 0 0;
				@include centerblock;
			}
			&:last-of-type {
				background-color: adjust-color(
					$col-prim,
					$saturation: 35%,
					$lightness: 36.5%
				);
				& i {
					color: $col-prim;
				}
			}
			& i {
				font-size: 18px;
				width: 19%;
				color: map-get($greys, dark);
			}
		}
	}
}

.resto {
	background: map-get($greys, lighter);
	padding: 54px 20px 46px 20px;
	// border:solid 1px black;
	& h2 {
		margin-bottom: 21px;
	}
	& a {
		width: 100%;
		color: black;
	}
	&__fig {
		width: 100%;
		border-radius: 15px;
		margin-bottom: 18px;
		box-shadow: 2px 4px 6px map-get($greys, medium);
		background: white;
		position: relative;
		&__img {
			width: 100%;
			object-fit: cover;
			object-position: bottom;
			height: 174px;
			border-top-left-radius: 15px;
			border-top-right-radius: 15px;
			&--pos {
				object-position: 50% 61%;
			}
		}
		&__new {
			background: $col-ter;
			color: saturate(darken($col-ter, 47.75%), 50%);
			position: absolute;
			top: 12px;
			right: 12px;
			font-size: 14px;
			font-weight: 500;
			width: 80px;
			height: 30px;
			text-align: center;
			vertical-align: middle;
			line-height: 30px;
		}
		&__cap {
			padding: 12px 0 0 12px;
			height: 73px;
			width: 100%;
			position: relative;
			& h3 {
				margin-bottom: 2px;
			}
			&__heart {
				font-size: 23px;
				position: absolute;
				bottom: 45%;
				right: 23px;
			}
		}
	}
}

.spinner {
	height: 100vh;
	width: 375px;
	background: rgba($col-sec, 0.3);
	position: fixed;
	top: 0;
	z-index: 2;
	animation: fade 200ms 2.8s linear forwards, removes 0s 3s forwards;
	@include centerblock;
	&__dot {
		height: 20px;
		width: 20px;
		border-radius: 50%;
		margin: 0 10px;
		$anim-dur: 400ms;
		animation: bounce $anim-dur alternate infinite ease;
		
		position: relative;
		&::before {
			content: "";
			display: inline-block;
			height: 20px;
			width: 20px;
			border-radius: 50%;
			opacity: 0;
		}
		&::after {
			content: "";
			display: inline-block;
			height: 20px;
			width: 20px;
			border-radius: 50%;
			position: relative;
			top: -24px;
			opacity: 0;
		}
		@for $i from 1 through 3 {
			$delay: ($i - 1) * $anim-dur / 4;
			&:nth-of-type(#{$i}) {
				background: map-get($colors, $i);
				animation-delay: $delay;

				&::before {
					background: map-get($colors, mult3(($i + 1)));
					animation: seccolorchange (3 * $anim-dur) $delay step-end infinite;
				}

				&::after {
					background: map-get($colors, mult3(($i + 2)));
					animation: tercolorchange (3 * $anim-dur) $delay step-end infinite;
				}
			}
		}
	}
}
@keyframes fade {
	from {
		opacity: 1;
	}

	to {
		opacity: 0;
		// z-index: -1;
	}
}
@keyframes removes {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(-9999px);
	}
}
@keyframes seccolorchange {
	0% {
		opacity: 0;
	}
	33% {
		opacity: 1;
	}
	66%,
	100% {
		opacity: 0;
	}
}
@keyframes tercolorchange {
	0% {
		opacity: 0;
	}
	66% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}
@keyframes bounce {
	0% {
		transform: translateY(0);
	}
	// 50% {transform: translateY(-40px)
	// 	animation-timing;}
	100% {
		transform: translateY(-50px);
	}
}
